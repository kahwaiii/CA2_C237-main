<main class="appointment-body container py-5">

  <!-- Flash Messages -->
  <% for (let type in messages) { messages[type].forEach(msg => { %>
    <div class="alert alert-<%= (type === 'danger' ? 'danger' : type === 'success' ? 'success' : 'info') %> alert-dismissible fade show shadow-sm rounded-3" role="alert">
      <%= msg %>
      <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
  <% }) } %>

  <% if (!pet) { %>
    <div class="alert alert-warning shadow-sm rounded-3">
      Sorry, this pet is not available for appointments.
    </div>
    <a href="/pets" class="btn btn-secondary"><i class="bi bi-arrow-left"></i> Back to Pets</a>
    </main>
    <% return; %>
  <% } %>

  <!-- Hero Section -->
  <div class="appointment-hero">
    <img src="<%= pet.image ? (pet.image.startsWith('/') ? pet.image : '/images/' + pet.image) : '/images/no-image.png' %>" alt="<%= pet.name %>">
    <h1>Meet <%= pet.name %></h1>
  </div>

  <!-- Booking Card -->
   <div class="booking-card">
    <div class="row mb-4">
      <div class="col-md-6">
        <ul class="list-group">
          <li class="list-group-item"><strong>Type:</strong> <%= pet.type %></li>
          <li class="list-group-item"><strong>Breed:</strong> <%= pet.breed %></li>
          <li class="list-group-item"><strong>Age:</strong> <%= pet.age %> year<%= pet.age > 1 ? 's' : '' %></li>
          <% if (pet.description && pet.description.trim().length > 0) { %>
            <li class="list-group-item"><strong>Description:</strong> <%= pet.description %></li>
          <% } %>
        </ul>
      </div>
      <div class="col-md-6 text-center">
        <img src="<%= pet.image ? (pet.image.startsWith('/') ? pet.image : '/images/' + pet.image) : '/images/no-image.png' %>"
            alt="<%= pet.name %>" 
            class="rounded shadow-sm" 
            style="width: 200px; height: 200px; object-fit: cover;">
      </div>
    </div>

     <hr class="my-4" style="border-top: 2px solid #e9ecef; border-radius: 2px;">

    <!-- Booking Form -->
    <form id="bookingForm" method="POST" action="/appointments/schedule/<%= pet.id %>">
      <h4 class="fw-bold mb-3">Book Your Appointment</h4>

      <div class="row g-3">
        <div class="col-md-6">
          <label for="appointmentDate" class="form-label">Date</label>
          <input type="date"
                 id="appointmentDate"
                 class="form-control"
                 name="appointmentDate"
                 min="2025-07-29"
                 max="2025-08-31"
                 required>
        </div>

        <div class="col-md-6">
          <label for="timeSelect" class="form-label">Time</label>
          <select id="timeSelect" class="form-select" required disabled>
            <option value="">Select a time</option>
          </select>
        </div>
      </div>

      <input type="hidden" name="appointment_dt" id="appointment_dt" />

      <div class="mt-4">
        <button type="submit" class="btn btn-success px-4 shadow-sm">
          Book Appointment
        </button>
        <a href="/pets/<%= pet.id %>" class="btn btn-outline-secondary ms-2">
          Cancel
        </a>
      </div>
    </form>
  </div>

</main>

<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<script>
  (function() {
    const dateInput  = document.getElementById('appointmentDate');
    const timeSelect = document.getElementById('timeSelect');
    const hidden     = document.getElementById('appointment_dt');

    dateInput.addEventListener('change', async () => {
      const date = dateInput.value;
      timeSelect.innerHTML = '<option>Loading available times...</option>';
      timeSelect.disabled = true;

      if (!date) {
        timeSelect.innerHTML = '<option value="">Select a time</option>';
        return;
      }

      try {
        const response = await fetch(`/availableSlots?date=${date}&petId=<%= pet.id %>`);
        if (!response.ok) throw new Error('Network error');
        const slots = await response.json();

        if (slots.length === 0) {
          timeSelect.innerHTML = '<option value="">No available slots</option>';
        } else {
          timeSelect.innerHTML = '<option value="">Select a time</option>' +
            slots.map(t => `<option value="${t}">${t.slice(0,5)}</option>`).join('');
          timeSelect.disabled = false;
        }
      } catch (e) {
        timeSelect.innerHTML = '<option value="">Failed to load slots</option>';
      }
    });

    document.getElementById('bookingForm').addEventListener('submit', e => {
      const date = dateInput.value;
      const time = timeSelect.value;

      if (!date || !time) {
        e.preventDefault();
        alert('Please select both a date and a time.');
        return false;
      }
      hidden.value = `${date} ${time}`;
    });
  })();
</script>
